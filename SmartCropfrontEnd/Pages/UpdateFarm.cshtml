<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Farm Information</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>

    <h1>Edit Farm Information</h1>

    <label for="select-farm">Select Farm:</label>
    <br>
    <select id="select-farm" onchange="updateFarmInfo(this.value)">
        <!-- Options will be populated dynamically -->
    </select>
    <br>
    <br>

    <form id="edit-farm-form">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name"><br>
        <label for="address">Address:</label><br>
        <input type="text" id="address" name="address"><br>
        <label for="city">City:</label><br>
        <input type="text" id="city" name="city"><br>
        <label for="state">State:</label><br>
        <input type="text" id="state" name="state"><br>
        <label for="zip">Zip Code:</label><br>
        <input type="text" id="zip" name="zip"><br>
        <label for="latitude">Latitude:</label><br>
        <input type="text" id="latitude" name="latitude"><br>
        <label for="longitude">Longitude:</label><br>
        <input type="text" id="longitude" name="longitude"><br>

        <button type="submit">Update Farm</button>
    </form>

    <div id="response-message"></div>

    <script>
        // Populate dropdown with farm options
        async function populateFarmsDropdown() {
            try {
                const response = await fetch('/api/Farms');
                const farms = await response.json();

                const selectFarm = document.getElementById('select-farm');
                farms.forEach(farm => {
                    const option = document.createElement('option');
                    option.value = farm.id; // Assuming farm objects have an 'id' property
                    option.text = farm.name; // Assuming farm objects have a 'name' property
                    selectFarm.appendChild(option);
                });

                // Update farm info when page loads
                updateFarmInfo(selectFarm.value);
            } catch (error) {
                console.error('Error fetching farms:', error);
                alert('Failed to fetch farms. Please try again.');
            }
        }

        // Update farm information based on selected farm
        async function updateFarmInfo(farmId) {
            try {
                const response = await fetch(`/api/Farms/${farmId}`);
                const farmData = await response.json();

                // Update form fields with farm data
                document.getElementById('name').value = farmData.name;
                document.getElementById('address').value = farmData.address;
                document.getElementById('city').value = farmData.city;
                document.getElementById('state').value = farmData.state;
                document.getElementById('zip').value = farmData.zipCode;
                document.getElementById('latitude').value = farmData.latitude;
                document.getElementById('longitude').value = farmData.longitude;

                document.getElementById('response-message').textContent = ''; // Clear any previous messages
            } catch (error) {
                console.error('Error fetching farm data:', error);
                document.getElementById('response-message').textContent = 'Error fetching farm data. Please try again.';
            }
        }

        // Handle form submission
        document.getElementById('edit-farm-form').addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = new FormData(this);
            const farmId = document.getElementById('select-farm').value;

            try {
                const response = await fetch(`/api/Farms/${farmId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'applicat
